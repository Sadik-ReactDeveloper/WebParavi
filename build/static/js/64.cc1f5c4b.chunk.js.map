{"version":3,"sources":["components/chat/UserChatList.js","components/chat/UserChatMessage.js","components/chat/UserChatHistory.js","components/astrology/UserChatHistoryList.js","assets/img/astrologin-bg.jpg","../node_modules/reactstrap/es/Col.js"],"names":["ChatAppList","props","state","userChatList","Activeastro","index","astroId","localStorage","getItem","axiosConfig","get","then","res","console","log","data","setState","catch","err","userId","JSON","parse","response","status","roomid","error","this","className","length","map","user","Index","style","backgroundColor","key","_id","onClick","getChatRoomId","src","astroid","img","alt","fullname","msg","React","Component","ChatAppMassage","componentDidMount","roomChatData","chat","type","reverse","i","ChatApp","formatTime","timer","getSeconds","slice","minutes","Math","floor","getMinutes","getHours","handlestartinterval","apicall","current","setInterval","sessionStorage","setItem","payload","post","Fetchuserdetail","message","handlestop","history","push","swal","handleStart","countRef","setTimer","handlePause","clearInterval","minute","seconds","startTimer","secondsToTime","user_id","userimg","time","getChatRoom","Historydata","userid","obj","CurrentRoomid","respons","handlechat","roomId","sendbutton","submitHandler","e","preventDefault","handleChange","target","value","createRef","callmsg","bind","countDown","secs","divisor_for_minutes","divisor_for_seconds","h","m","s","ceil","alert","Container","class","id","Buyimg","UserChatHistoryList","userChatHistory","match","params","LayoutOne","headerTop","float","width","position","backgroundAttachment","backgroundSize","color","padding","backgroundImage","astrologinbg","backgroundPosition","backgroundRepeat","textAlign","Row","Col","md","marginTop","UserChatHistory","module","exports","_excluded","stringOrNumberProp","oneOfType","number","string","columnProps","bool","shape","size","order","offset","propTypes","tag","xs","sm","lg","xl","cssModule","object","widths","array","defaultProps","getColumnSizeClass","isXs","colWidth","colSize","Tag","attributes","colClasses","forEach","columnProp","_classNames","colSizeInterfix","colClass","_colClass","classes","createElement"],"mappings":"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","file":"static/js/64.cc1f5c4b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../../assets/scss/chat.scss\";\r\nimport axiosConfig from \"../../axiosConfig\";\r\n\r\nclass ChatAppList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userChatList: [],\r\n      Activeastro: {},\r\n      index: \"\",\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const astroId = localStorage.getItem(\"astroId\");\r\n    axiosConfig\r\n      .get(`/admin/getoneAstro/${astroId}`)\r\n      .then(res => {\r\n        console.log(res.data.data);\r\n        this.setState({ Activeastro: res?.data?.data });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n    let userId = JSON.parse(localStorage.getItem(\"user_id\"));\r\n\r\n    console.log(userId);\r\n    axiosConfig\r\n      .get(`/user/getroomid/${userId}`)\r\n      .then(response => {\r\n        console.log(response.data?.data);\r\n        if (response.data.status === true) {\r\n          this.setState({\r\n            userChatList: response.data?.data,\r\n            roomid: response.data.data?.roomid,\r\n          });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { userChatList, index } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"container\"></div>\r\n        <ul>\r\n          {userChatList.length\r\n            ? userChatList.map((user, Index) => {\r\n                return (\r\n                  <li\r\n                    className=\"astrolistmain\"\r\n                    style={{\r\n                      backgroundColor: `${\r\n                        index === Index ? \"#ef9014\" : \"white\"\r\n                      }`,\r\n                    }}\r\n                  >\r\n                    <div\r\n                      key={user?._id}\r\n                      className=\"list-main\"\r\n                      onClick={() => {\r\n                        this.props.getChatRoomId(user, Index);\r\n                        this.setState({ index: Index });\r\n                      }}\r\n                    >\r\n                      <div className=\"imglf\">\r\n                        <img\r\n                          src={user.astroid?.img}\r\n                          className=\"app-img\"\r\n                          alt=\"astroimg\"\r\n                        />\r\n                      </div>\r\n                      <div\r\n                        onClick={() => this.props.getChatRoomId(user)}\r\n                        className=\"lst-con\"\r\n                      >\r\n                        <h5 onClick={() => this.props.getChatRoomId(user)}>\r\n                          {user.astroid?.fullname}\r\n                        </h5>\r\n                        <p onClick={() => this.props.getChatRoomId(user)}>\r\n                          {user.msg}\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </li>\r\n                );\r\n              })\r\n            : null}\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChatAppList;\r\n","import React from \"react\";\r\nimport \"../../assets/scss/chat.scss\";\r\nimport axiosConfig from \"../../axiosConfig\";\r\nclass ChatAppMassage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userChatList: [],\r\n      Activeastro: {},\r\n      index: \"\",\r\n    };\r\n  }\r\n  componentDidMount = () => {\r\n    // axiosConfig\r\n    //   .get(`/user/allchatwithuser/${response.data?.data?.roomid}`)\r\n    //   .then(respons => {\r\n    //     this.handleStart();\r\n    //     console.log(respons?.data?.data);\r\n    //     if (respons.data.status === true) {\r\n    //       this.setState({ roomChatData: respons?.data.data });\r\n    //     }\r\n    //   })\r\n    //   .catch(error => {\r\n    //     console.log(error);\r\n    //   });\r\n  };\r\n\r\n  render() {\r\n    console.log(\"roomChatData\", this.props.roomChatData);\r\n    return (\r\n      <>\r\n        {this.props.roomChatData.length\r\n          ? this.props.roomChatData\r\n              .map((chat, index) => {\r\n                return (\r\n                  <>\r\n                    {chat.type === \"user\" ? (\r\n                      <div className=\"message me\">\r\n                        <div className=\"message-body\">{chat.msg}</div>\r\n                      </div>\r\n                    ) : (\r\n                      <div className=\"message\">\r\n                        <div className=\"message-body\">{chat.msg}</div>\r\n                      </div>\r\n                    )}\r\n                  </>\r\n                );\r\n              })\r\n              .reverse()\r\n          : null}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChatAppMassage;\r\n","import React from \"react\";\r\nimport { Button, Container } from \"reactstrap\";\r\nimport \"../../assets/scss/chat.scss\";\r\nimport LayoutOne from \"../../layouts/LayoutOne\";\r\nimport Buyimg from \"../../../src/assets/img/boy-img.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ChatAppList from \"./UserChatList.js\";\r\nimport ChatAppMassage from \"./UserChatMessage.js\";\r\nimport axiosConfig from \"../../axiosConfig\";\r\nimport { Fetchuserdetail } from \"../header/IconGroup\";\r\nimport swal from \"sweetalert\";\r\n\r\nclass ChatApp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.countRef = React.createRef();\r\n    this.apicall = React.createRef();\r\n    this.callmsg = React.createRef();\r\n\r\n    this.state = {\r\n      Index: \"\",\r\n      Historydata: false,\r\n      setTimer: 0,\r\n      data: {},\r\n      sendbutton: \"\",\r\n      Activeastro: {},\r\n      CurrentRoomid: \"\",\r\n      roomChatData: [],\r\n      userId: \"\",\r\n      astroId: \"\",\r\n      msg: \"hello\",\r\n      roomId: \"\",\r\n      time: {},\r\n      seconds: 60 * 15,\r\n      minutes: 15,\r\n    };\r\n    this.timer = 0;\r\n    this.startTimer = this.startTimer.bind(this);\r\n    this.countDown = this.countDown.bind(this);\r\n  }\r\n\r\n  secondsToTime(secs) {\r\n    let hours = Math.floor(secs / (60 * 60));\r\n    let divisor_for_minutes = secs % (60 * 60);\r\n    let minutes = Math.floor(divisor_for_minutes / 60);\r\n    let divisor_for_seconds = divisor_for_minutes % 60;\r\n    let seconds = Math.ceil(divisor_for_seconds);\r\n\r\n    let obj = {\r\n      h: hours,\r\n      m: minutes,\r\n      s: seconds,\r\n    };\r\n    return obj;\r\n  }\r\n  formatTime = timer => {\r\n    const getSeconds = `0${timer % 60}`.slice(-2);\r\n    const minutes = `${Math.floor(timer / 60)}`;\r\n    const getMinutes = `0${minutes % 60}`.slice(-2);\r\n    const getHours = `0${Math.floor(timer / 3600)}`.slice(-2);\r\n\r\n    return `${getHours} : ${getMinutes} : ${getSeconds}`;\r\n  };\r\n\r\n  handlestartinterval = () => {\r\n    this.apicall.current = setInterval(() => {\r\n      let userId = JSON.parse(localStorage.getItem(\"user_id\"));\r\n      let astroId = localStorage.getItem(\"videoCallAstro_id\");\r\n      sessionStorage.setItem(\"typeofcall\", \"Chat\");\r\n\r\n      let payload = {\r\n        userId: userId,\r\n        astroId: astroId,\r\n        status: true,\r\n      };\r\n      axiosConfig\r\n        .post(`/user/addCallDuration`, payload)\r\n        .then(res => {\r\n          console.log(\"callduration\", res.data);\r\n          Fetchuserdetail();\r\n        })\r\n        .catch(err => {\r\n          console.log(err.response.data.message);\r\n          if (\r\n            err.response.data.message === \"Insufficient balance for the call\"\r\n          ) {\r\n            this.handlestop();\r\n            this.props.history.push(\"/allastrologerlist\");\r\n            swal(\"You have Low Balance\");\r\n          }\r\n          // swal(\r\n          //   \"Low Balance\",\r\n          //   \"Your Balance is getting low As per minimum charge of this Astrologer\",\r\n          //   {\r\n          //     buttons: {\r\n          //       catch: { text: \"Cancel \", value: \"catch\" },\r\n          //       recharge: { text: \"Recharge NOW \", value: \"Recharge\" },\r\n          //     },\r\n          //   }\r\n          // ).then((value) => {\r\n          //   switch (value) {\r\n          //     case \"catch\":\r\n          //       this.props.history.push(\"/\");\r\n          //       break;\r\n          //     case \"Recharge\":\r\n          //       swal(\"move to recharge \");\r\n          //       break;\r\n          //     default:\r\n          //   }\r\n          // });\r\n        });\r\n    }, 60000);\r\n  };\r\n\r\n  handleStart = () => {\r\n    this.countRef.current = setInterval(() => {\r\n      this.setState({ setTimer: this.state.setTimer + 1 });\r\n    }, 1000);\r\n    this.handlestartinterval();\r\n  };\r\n\r\n  handlePause = () => {\r\n    clearInterval(this.countRef.current);\r\n    clearInterval(this.apicall.current);\r\n    // this.setState({ setIsPaused: false });\r\n  };\r\n\r\n  handlestop = () => {\r\n    this.handlePause();\r\n    let userId = JSON.parse(localStorage.getItem(\"user_id\"));\r\n    let astroId = localStorage.getItem(\"videoCallAstro_id\");\r\n    sessionStorage.setItem(\"typeofcall\", \"Chat\");\r\n    let payload = {\r\n      userId: userId,\r\n      astroId: astroId,\r\n      status: false,\r\n    };\r\n    axiosConfig\r\n      .post(`/user/addCallDuration`, payload)\r\n      .then(res => {\r\n        console.log(\"callduration per min\", res.data);\r\n      })\r\n      .catch(err => {\r\n        console.log(err.response.data.message);\r\n      });\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    const astroId = localStorage.getItem(\"astroId\");\r\n\r\n    axiosConfig\r\n      .get(`/admin/getoneAstro/${astroId}`)\r\n      .then(res => {\r\n        console.log(res.data.data);\r\n        this.setState({ Activeastro: res?.data?.data });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n\r\n    let timeLeftVar = \"\";\r\n    if (JSON.parse(localStorage.getItem(\"minute\"))) {\r\n      let minute = JSON.parse(localStorage.getItem(\"minute\"));\r\n      this.setState({ minutes: minute, seconds: minute * 60 });\r\n      this.startTimer();\r\n      this.secondsToTime(minute * 60);\r\n    }\r\n\r\n    let user_id = JSON.parse(localStorage.getItem(\"user_id\"));\r\n\r\n    axiosConfig\r\n      .get(`/user/getroomid/${user_id}`)\r\n      .then(response => {\r\n        console.log(response.data.data);\r\n        if (response.data.status === true) {\r\n          this.setState({\r\n            data: response.data.data,\r\n            fullname: response.data.data.fullname,\r\n            userimg: response.data.data.userimg,\r\n            time: timeLeftVar,\r\n          });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  startTimer() {\r\n    if (this.timer === 0 && this.state.seconds > 0) {\r\n      this.timer = setInterval(this.countDown, 1000);\r\n    }\r\n  }\r\n\r\n  countDown() {\r\n    // let astroid = JSON.parse(localStorage.getItem('astroid'))\r\n    // Remove one second, set state so a re-render happens.\r\n    let seconds =\r\n      this.state.seconds !== 0 ? this.state.seconds - 1 : alert(\"out time\");\r\n    // this.history.redirect(`/astrologerdetail/${astroid}`)\r\n    // <Redirect to={'/chatApp/astrologerdetail/' + astroid} />\r\n    this.setState({\r\n      time: this.secondsToTime(seconds),\r\n      seconds: seconds,\r\n      //    if (seconds = 0 && this.state.seconds > 0) {\r\n      //   this.timer = setInterval(this.countDown, 1000);\r\n      // }\r\n    });\r\n\r\n    // Check if we're at zero.\r\n    if (seconds === 0) {\r\n      clearInterval(this.timer);\r\n      // window.location.replace(\"/#/astrorating\");\r\n    }\r\n  }\r\n  getChatRoom = (data, status) => {\r\n    this.setState({ Historydata: status });\r\n\r\n    let userid = JSON.parse(localStorage.getItem(\"user_id\"));\r\n    let obj = {\r\n      astroid: data?._id,\r\n      msg: this.state.msg,\r\n    };\r\n    if (this.state.CurrentRoomid != \"\") {\r\n      axiosConfig\r\n        .get(`/user/allchatwithuser/${this.state.CurrentRoomid}`)\r\n        .then(respons => {\r\n          console.log(respons?.data?.data);\r\n          this.handleStart();\r\n\r\n          if (respons.data.status === true) {\r\n            this.setState({ roomChatData: respons?.data.data });\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      axiosConfig\r\n        .post(`/user/addchat/${userid}`, obj)\r\n        .then(response => {\r\n          console.log(\"chat\", response.data);\r\n          this.setState({ CurrentRoomid: response?.data?.data?.roomid });\r\n          console.log(\"chat\", response?.data?.data?.roomid);\r\n          if (response.data.status === true) {\r\n            this.setState({ msg: \"\" });\r\n            axiosConfig\r\n              .get(`/user/allchatwithuser/${response?.data?.data?.roomid}`)\r\n              .then(respons => {\r\n                console.log(respons?.data?.data);\r\n\r\n                if (respons.data.status === true) {\r\n                  this.setState({ roomChatData: respons?.data.data });\r\n                }\r\n              })\r\n              .catch(error => {\r\n                console.log(error);\r\n              });\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  handlechat = () => {\r\n    console.log(this.state.roomId);\r\n    axiosConfig\r\n      .get(`/user/allchatwithuser/${this.state.roomId}`)\r\n      .then(response => {\r\n        console.log(response?.data?.data);\r\n        if (response.data.status === true) {\r\n          this.setState({ roomChatData: response?.data.data });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  getChatRoomId = async (user, index) => {\r\n    this.setState({ Historydata: true });\r\n    this.setState({ sendbutton: user.astroid?._id });\r\n    this.setState({ Index: index });\r\n    console.log(\"user\", user);\r\n    localStorage.setItem(\"videoCallAstro_id\", user?.astroid?._id);\r\n    console.log(\"userdata\", user);\r\n    this.setState({ astroId: user?.astroid?._id, roomId: user?.roomid });\r\n    this.handlechat();\r\n  };\r\n  submitHandler = async (e, astroid, userId) => {\r\n    e.preventDefault();\r\n\r\n    const astroId = localStorage.getItem(\"astroId\");\r\n    let userid = JSON.parse(localStorage.getItem(\"user_id\"));\r\n    console.log(\"first\", userid);\r\n    if (this.state.msg != \"\") {\r\n      let obj = {\r\n        astroid: astroId,\r\n        msg: this.state.msg,\r\n      };\r\n\r\n      await axiosConfig\r\n        .post(`/user/addchat/${userid}`, obj)\r\n        .then(response => {\r\n          console.log(\"hdfkjh\", response.data?.data?.roomid);\r\n          if (response.data.status === true) {\r\n            this.setState({ msg: \"\" });\r\n            axiosConfig\r\n\r\n              .get(`/user/allchatwithuser/${response.data?.data?.roomid}`)\r\n              .then(respons => {\r\n                console.log(respons?.data?.data);\r\n\r\n                if (respons.data.status === true) {\r\n                  this.setState({ roomChatData: respons?.data.data });\r\n                }\r\n              })\r\n              .catch(error => {\r\n                console.log(error);\r\n              });\r\n          }\r\n        })\r\n\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    } else swal(\"Input filed is blank\", \"Fill it before send\");\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      msg: e.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"app-chatbg\">\r\n        <Container>\r\n          <div class=\"app rt-chat\">\r\n            <div class=\"contact-list\">\r\n              <h1 class=\"title\">My messages</h1>\r\n\r\n              <ChatAppList\r\n                getChatRoomId={(id, index) => this.getChatRoomId(id, index)}\r\n                getChatRoom={(data, status) => this.getChatRoom(data, status)}\r\n                data={this.state.Historydata}\r\n              />\r\n            </div>\r\n            <div class=\"messages\">\r\n              <div className=\"chat-header\">\r\n                <p>\r\n                  <span>\r\n                    <img\r\n                      src={\r\n                        this.state.roomChatData.length > 0\r\n                          ? this.state.roomChatData[0]?.astroid?.img[0]\r\n                          : Buyimg\r\n                      }\r\n                      className=\"app-img\"\r\n                      alt=\"\"\r\n                    />\r\n                  </span>\r\n                  {this.state.roomChatData.length > 0\r\n                    ? this.state.roomChatData[0]?.astroid?.fullname\r\n                    : null}\r\n                </p>\r\n              </div>\r\n              <div class=\"messages-history\">\r\n                <ChatAppMassage\r\n                  roomChatData={\r\n                    this.state.roomChatData.length > 0\r\n                      ? this.state.roomChatData\r\n                      : []\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      </section>\r\n    );\r\n  }\r\n}\r\nexport default ChatApp;\r\n","import React from \"react\";\r\n\r\nimport { Container, Row, Col } from \"reactstrap\";\r\nimport astrologinbg from \"../../assets/img/astrologin-bg.jpg\";\r\n\r\nimport LayoutOne from \"../../layouts/LayoutOne\";\r\nimport \"../../assets/scss/astroteam.scss\";\r\n\r\nimport axiosConfig from \"../../axiosConfig\";\r\n\r\nimport UserChatHistory from \"../chat/UserChatHistory.js\";\r\n\r\nclass UserChatHistoryList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      userChatHistory: [],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    let { id } = this.props.match.params;\r\n    let userId = JSON.parse(localStorage.getItem(\"user_id\"));\r\n\r\n    console.log(userId);\r\n    axiosConfig\r\n      .get(`/user/getOne_Conversation_Wallet/${userId}`)\r\n      .then(response => {\r\n        console.log(\"userChatList\", response.data.data);\r\n        if (response.data.status === true) {\r\n          this.setState({\r\n            userChatList: response.data.data,\r\n          });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n\r\n    axiosConfig\r\n      .get(`/user/userChathistory/${userId}`)\r\n      .then(response => {\r\n        console.log(\"chatList\", response.data.data);\r\n        if (response.data.status === true) {\r\n          this.setState({\r\n            userChatHistory: response.data.data,\r\n          });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { userChatHistory } = this.state;\r\n\r\n    return (\r\n      <LayoutOne headerTop=\"visible\">\r\n        <section className=\"pt-0 pb-0\">\r\n          <div\r\n            className=\"\"\r\n            style={{\r\n              float: \"left\",\r\n              width: \"100%\",\r\n              backgroundColor: \"#272727\",\r\n              position: \"relative\",\r\n              backgroundAttachment: \"fixed\",\r\n              backgroundSize: \"cover\",\r\n              color: \"#ffffff\",\r\n              padding: \" 50px 0px 50px 0px\",\r\n              backgroundImage: `url(${astrologinbg})`,\r\n              backgroundPosition: \"center center\",\r\n              backgroundRepeat: \" no-repeat\",\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            <Container>\r\n              <Row>\r\n                <Col md=\"12\">\r\n                  <div className=\"leftcont text-left\">\r\n                    <h1>User Chat/Video History</h1>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </div>\r\n        </section>\r\n        <section style={{ marginTop: \"52px\" }} className=\"userchathistory\">\r\n          <Container>\r\n            <div className=\"container mt-3\">\r\n              <UserChatHistory />\r\n            </div>\r\n          </Container>\r\n        </section>\r\n        {/* <section>\r\n          <Container>\r\n            <Row>\r\n              <Col lg=\"12\">\r\n                <div className=\"\">\r\n                  <Table striped className=\"\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>#Conversation ID</th>\r\n                        <th>Astrologer Name</th>\r\n\r\n                        <th>Conversation Type</th>\r\n                        <th>Rate</th>\r\n                        <th>Duration</th>\r\n                        <th>Amount</th>\r\n                        <th>Deducation</th>\r\n                        <th>Date/Time</th>\r\n                        <th>Action</th>\r\n                      </tr>\r\n                    </thead>\r\n                    {userChatList.length\r\n                      ? userChatList.map((user, index) => {\r\n                          return (\r\n                            <tbody>\r\n                              <tr>\r\n                                <th>{user?.conversationId}</th>\r\n                                <td>{user?.astroid?.fullname}</td>\r\n\r\n                                <td>{user?.type}</td>\r\n                                <td>{user?.astroid?.callCharge}/Min.</td>\r\n                                \r\n                                <td>{user?.userid?.amount}Rs.</td>\r\n                                <td>{user?.userid?.deductedAmt}Rs.</td>\r\n                                <td>{user?.createdAt}</td>\r\n                                <td>\r\n                                  <Link className=\"Tansdel\">\r\n                                    <i\r\n                                      class=\"fa fa-trash-o\"\r\n                                      aria-hidden=\"true\"\r\n                                    ></i>\r\n                                  </Link>\r\n                                </td>\r\n                              </tr>\r\n\r\n                             \r\n                            </tbody>\r\n                          );\r\n                        })\r\n                      : null}\r\n                  </Table>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </section> */}\r\n      </LayoutOne>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserChatHistoryList;\r\n","module.exports = __webpack_public_path__ + \"static/media/astrologin-bg.f858568c.jpg\";","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"widths\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string, PropTypes.shape({\n  size: PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string]),\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  tag: tagPropType,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: colWidths\n};\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\nvar Col = function Col(props) {\n  var className = props.className,\n    cssModule = props.cssModule,\n    widths = props.widths,\n    Tag = props.tag,\n    attributes = _objectWithoutPropertiesLoose(props, _excluded);\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n    var isXs = !i;\n    if (isObject(columnProp)) {\n      var _classNames;\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      var colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames)), cssModule));\n    } else {\n      var _colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n      colClasses.push(_colClass);\n    }\n  });\n  if (!colClasses.length) {\n    colClasses.push('col');\n  }\n  var classes = mapToCssModules(classNames(className, colClasses), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\nCol.propTypes = propTypes;\nCol.defaultProps = defaultProps;\nexport default Col;"],"sourceRoot":""}